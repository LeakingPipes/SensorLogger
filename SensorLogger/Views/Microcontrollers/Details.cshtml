@model SensorLogger.Models.Microcontroller

@{
    ViewData["Title"] = "Details";
}

@functions {

    string getdata()
    {
        string output = "['Time'";
        string outputreadingvalue = "['";
        List<string> valueType = new List<string>();


        foreach (Reading reading in Model.Readings)
        {


            foreach(ReadingValue readingValue in reading.ReadingValues)
            {
                valueType.Add(readingValue.ValueType);

                output = output + ", '" + readingValue.ValueType + "'";

            }
        }

        output = output + "],";


        foreach (Reading reading in Model.Readings)
        {
            outputreadingvalue = outputreadingvalue + reading.Date_time + "'";

            foreach(ReadingValue readingValue in reading.ReadingValues)
            {
                outputreadingvalue = outputreadingvalue + ", " + readingValue.Value;

            }
            outputreadingvalue = outputreadingvalue + "],";
        }
        outputreadingvalue = outputreadingvalue.Remove(outputreadingvalue.Length - 1);


        output = output + outputreadingvalue;

        return output;
    }

}

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">
    google.charts.load('current', { 'packages': ['corechart'] });
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
        var data = google.visualization.arrayToDataTable([

            @getdata()
        ]);

        var options = {
            title: 'Company Performance',
            curveType: 'function',
            legend: { position: 'bottom' }
        };

        var chart = new google.visualization.LineChart(document.getElementById('curve_chart'));

        chart.draw(data, options);
    }
</script>

<div>
    @getdata()
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.MicrocontrollerName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.MicrocontrollerName)
        </dd>
        <dt class="col-sm-2">
            API URL
        </dt>
        <dd class="col-sm-10">
            <p>https://localhost:44396/api/microcontroller?id=@Html.DisplayFor(model => model.MicrocontrollerID)</p>
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Readings)
        </dt>

        <div id="curve_chart" style="width: 800px; height: 300px"></div>

        <dd class="col-sm-10">
            <table class="table">
                <tr>
                    <th>Date and time</th>
                    <th>Values</th>
                </tr>
                @foreach (var _reading in Model.Readings)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(model => _reading.Date_time)
                        </td>
                        <td>
                            @foreach (var _readingvalue in _reading.ReadingValues)
                            {
                                @Html.DisplayFor(model => _readingvalue.Value)
                                <text> </text>
                                @Html.DisplayFor(model => _readingvalue.ValueType)
                                <br />
                            }
                        </td>
                    </tr>
                }
            </table>
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.MicrocontrollerID">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>