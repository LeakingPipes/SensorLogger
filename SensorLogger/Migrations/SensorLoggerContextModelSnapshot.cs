// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SensorLogger.Data;

namespace SensorLogger.Migrations
{
    [DbContext(typeof(SensorLoggerContext))]
    partial class SensorLoggerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SensorLogger.Models.Microcontroller", b =>
                {
                    b.Property<int>("MicrocontrollerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MicrocontrollerName");

                    b.HasKey("MicrocontrollerID");

                    b.ToTable("Microcontroller");
                });

            modelBuilder.Entity("SensorLogger.Models.Reading", b =>
                {
                    b.Property<int>("ReadingID");

                    b.Property<DateTime>("Date_time");

                    b.Property<int>("MicrocontrollerID");

                    b.HasKey("ReadingID");

                    b.HasIndex("MicrocontrollerID");

                    b.ToTable("Reading");
                });

            modelBuilder.Entity("SensorLogger.Models.ReadingValue", b =>
                {
                    b.Property<int>("ReadingValueID");

                    b.Property<int>("ReadingID");

                    b.Property<float>("Value");

                    b.Property<string>("ValueType");

                    b.HasKey("ReadingValueID");

                    b.HasIndex("ReadingID");

                    b.ToTable("ReadingValue");
                });

            modelBuilder.Entity("SensorLogger.Models.Reading", b =>
                {
                    b.HasOne("SensorLogger.Models.Microcontroller", "Microcontroller")
                        .WithMany("Readings")
                        .HasForeignKey("MicrocontrollerID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SensorLogger.Models.ReadingValue", b =>
                {
                    b.HasOne("SensorLogger.Models.Reading", "Readings")
                        .WithMany("ReadingValues")
                        .HasForeignKey("ReadingID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
